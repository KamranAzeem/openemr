version: "3.1"
services:
  openemr:
    # The official image for 5.0.0 by openemr is horrible (openemr/openemr:5.0.0).
    # So, I built my own.
    # image: kamranazeem/openemr:5.0.0
    build: openemr/
    environment:
      # Non-sensitive environment variables can be setup in this environment section.
      #
      # USE_EXISTING_SETUP:
      # ------------------
      # This option is used to retain whatever data is in the database,
      #   in-case you are migrating a running system from one computer to another.
      # This means that the setup wizard MUST NOT (and WILL NOT) run, 
      #   and should simply connect to exising database, with data in it.
      # In this case you need to provide DB connection details in the related .env file.
      # docker-entrypoint.sh script will use the information in the .env file to populated sqlconf.php file.
      # In other words, setting USE_EXISTING_SETUP=Y will always safeguard your data. So it is a safe option to use.
      # If you are setting up a fresh openemr system, then set this to: N or n.
      - USE_EXISTING_SETUP=Y

      # TZ (timezone):
      # --------------
      # This is the timezone used by the container OS.
      # There is another setting in php.ini. 
      # Please ensure that you setup correct/corresponding entry in php.ini file under [Date] section.
      # The corresponding php.ini setting will be: date.timezone = Europe/Oslo
      - TZ=Europe/Oslo

    env_file:
      # Sensitive environment varibles go in the .env file.
      # Sensitive variables will not be part of the repository.
      # You need to manually create this file.
      # See the accompnying openemr.env.example file.
      # The following env file contains information to connect to the database.
      - openemr/openemr.server.env
    labels:
      - traefik.frontend.rule=Host:openemr.wbitt.com
      - traefik.port=80
      - traefik.enable=true
    volumes:
      # If you want to do any customization to the image,
      #   place those scripts under openemr/docker-entrypoint.d/ ,
      #   and mount this location in your container.
      # If there is no customizatio, you can skip the volume mount section altogether.
      - ${PWD}/openemr/docker-entrypoint.d:/docker-entrypoint.d
    depends_on:
      - db
    networks:
      # This 'uses' the proxy network called 'services-network'
      - services-network
      - db-network

  db:
    # image: mariadb:10.4
    # For now, mysql:5.7 is a safe choice - for backward compatibility
    image: mysql:5.7
    env_file:
      - db/db.server.env
    volumes:
      # Add any custom configuration files under conf.d directory in this image.
      - ${PWD}/db/conf.d:/etc/mysql/conf.d

      # If there are any .sql files inside the docker-entrypoint-initdb.d directory, they will be executed*.
      #   *-certain conditions apply. See MySQL documentation on DockerHub.
      # If .sql file has lots of data, it may take several minutes before DB is fully available.
      # Mysql will restart itself after loading the .sql files from docker-entrypoint-initdb.d directory.
      # This means your web application will need to wait until then.
      - ${PWD}/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

      # You can use a host directory for persistent storage, or a docker volume:
      - /home/containers-data/openemr-db:/var/lib/mysql
      # - dbvolume:/var/lib/mysql

    networks:
      - services-network
      - db-network

  #################################################################################
  # This docker-compose file does not define traefik reverse proxy inside it, 
  #   because, on the server there is a separate treafik instance running already.
  #################################################################################


networks:
  services-network:
    external: true
  db-network:
