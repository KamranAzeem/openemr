version: "3.1"
services:
  openemr:
    # The official image for 5.0.0 by openemr is horrible (openemr/openemr:5.0.0).
    # So, I built my own.
    # image: kamranazeem/openemr:5.0.0
    build: openemr/
    environment:
      # Non-sensitive environment variables can be setup in this environment section.
      #
      # USE_EXISTING_SETUP:
      # ------------------
      # This option is used to retain whatever data is in the database,
      #   in-case you are migrating a running system from one computer to another.
      # This means that the setup wizard MUST NOT (and WILL NOT) run, 
      #   and should simply connect to exising database, with data in it.
      # In this case you need to provide DB connection details in the related .env file.
      # docker-entrypoint.sh script will use the information in the .env file to populated sqlconf.php file.
      # In other words, setting USE_EXISTING_SETUP=Y will always safeguard your data. So it is a safe option to use.
      # If you are setting up a fresh openemr system, then set this to: N or n.
      - USE_EXISTING_SETUP=N
      - TZ=Europe/Oslo
    env_file:
      # Sensitive environment varibles go in the .env file.
      # Sensitive variables will not be part of the repository.
      # You need to manually create this file.
      # See the accompnying openemr.env.example file.
      # The following env file contains information to connect to the database.
      - openemr/openemr.devpc.env
    labels:
      - traefik.frontend.rule=Host:openemr.example.com
      - traefik.port=80
      - traefik.enable=true
    volumes:
      # If you want to do any customization to the image, 
      #   place those scripts under openemr/docker-entrypoint.d/ ,
      #   and mount this location in your container. 
      # If there is no customization, you can skip this volume mount section altogether.
      - ${PWD}/openemr/docker-entrypoint.d:/docker-entrypoint.d
    depends_on:
      - db

  db:
    # image: mariadb:10.4
    # For now, mysql:5.7 is a safe choice - for backward compatibility
    image: mysql:5.7
    env_file:
      - db/db.devpc.env
    volumes:
      - ${PWD}/db/conf.d:/etc/mysql/conf.d
      # If there are any .sql files inside the docker-entrypoint-initdb.d directory, they will be executed*.
      #   *-certain conditions apply. See MySQL documentation on DockerHub.
      - ${PWD}/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      # If you skip both host volume and docker volume, 
      #   the data will exist in the container only during it's lifetime
      # You can use a host directory for persistent storage, or a docker volume:
      # - /home/containers-data/openemr-db:/var/lib/mysql
      # You can use a docker volume for persistent storage on the host.
      # See the last part of this file to enable creation of this volume.
      # - dbvolume:/var/lib/mysql
      

  traefik:
    image: traefik:1.7
    labels:
      # Traefik does not need a PathPrefix
      - traefik.frontend.rule=Host:traefik.example.com
      - traefik.port=8080
      - traefik.enable=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/traefik/traefik.devpc.toml:/etc/traefik/traefik.toml
    ports:
      - 80:80
      - 443:443

# volumes:
#   dbvolume: {}

